{"version":3,"sources":["components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","filterTitle","filterStatus","filterByTitle","todo","title","toLowerCase","includes","filterByStatus","completed","this","props","todos","onUserSelect","filterTodos","filter","className","type","name","value","onChange","event","setState","target","map","item","key","id","classNames","readOnly","onClick","userId","React","Component","request","url","fetch","then","res","ok","Error","status","statusText","json","result","data","getUser","CurrentUser","user","prevProps","clearUser","email","phone","App","selectedUserId","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ac02109.chunk.js","sourcesContent":["/* eslint-disable consistent-return */\nimport React from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport class TodoList extends React.Component {\n  state = {\n    filterTitle: '',\n    filterStatus: 'all',\n  }\n\n  filterByTitle = (todo) => {\n    const { filterTitle } = this.state;\n\n    if (todo.title === null) {\n      return;\n    }\n\n    return todo.title.toLowerCase()\n      .includes(filterTitle.toLowerCase());\n  }\n\n  filterByStatus = (todo) => {\n    const { filterStatus } = this.state;\n\n    switch (filterStatus) {\n      case 'completed': return todo.completed;\n      case 'active': return !todo.completed;\n      default: return true;\n    }\n  }\n\n  render() {\n    const { todos, onUserSelect } = this.props;\n\n    const filterTodos = todos\n      .filter(this.filterByTitle)\n      .filter(this.filterByStatus);\n\n    return (\n\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <form>\n          <label>\n            Todo Filter:\n            <input\n              type=\"text\"\n              className=\"TodoList__filter\"\n              name=\"filterTitle\"\n              value={this.state.name}\n              onChange={event => this.setState({\n                filterTitle: event.target.value,\n              })}\n            />\n          </label>\n          <label>\n            <select\n              onChange={event => this.setState({\n                filterStatus: event.target.value,\n              })}\n            >\n              <option value=\"all\">Show All</option>\n              <option value=\"completed\">Show Completed</option>\n              <option value=\"active\">Show Active</option>\n            </select>\n          </label>\n        </form>\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {filterTodos.map(item => (\n              <li\n                key={item.id}\n                className={classNames(`TodoList__item`, {\n                  'TodoList__item--unchecked': item.completed === false,\n                  'TodoList__item--checked': item.completed === true,\n                })}\n              >\n                <label>\n                  <input type=\"checkbox\" readOnly />\n                  <p>{item.title}</p>\n                </label>\n\n                <button\n                  className=\"\n                TodoList__user-button\n                TodoList__user-button--selected\n                button\"\n                  onClick={() => {\n                    onUserSelect(item.userId);\n                  }}\n                  type=\"button\"\n                >\n                  User&nbsp;#\n                  {item.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onUserSelect: PropTypes.func.isRequired,\n};\n","// eslint-disable-next-line no-unused-vars\nconst API_URL = `https://mate-api.herokuapp.com`;\n\nexport function request(url) {\n  return fetch(`${API_URL}${url}`)\n    .then((res) => {\n      if (!res.ok) {\n        throw new Error(`${res.status} - ${res.statusText}`);\n      }\n\n      return res.json();\n    })\n    .then(result => result.data);\n}\n\nexport const getAllTodos = () => request('/todos');\nexport const getUser = userId => request(`/users/${userId}`);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../../api/api';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n  };\n\n  componentDidMount() {\n    getUser(this.props.userId)\n      .then(user => this.setState({ user }));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      getUser(this.props.userId)\n        .then(user => this.setState({ user }));\n    }\n  }\n\n  render() {\n    const { clearUser } = this.props;\n    const { user } = this.state;\n\n    return (\n\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:&nbsp;\n            {user && user.id}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{user && user.name}</h3>\n        <p className=\"CurrentUser__email\">{user && user.email}</p>\n        <p className=\"CurrentUser__phone\">{user && user.phone}</p>\n        <button\n          type=\"button\"\n          onClick={() => clearUser()}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  clearUser: PropTypes.func.isRequired,\n  userId: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getAllTodos } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getAllTodos()\n      .then((todos) => {\n        this.setState({ todos });\n      });\n  }\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n\n      <div className=\"App\">\n        {todos.length > 0 && (\n          <>\n            <div className=\"App__sidebar\">\n              <TodoList\n                todos={todos}\n                // eslint-disable-next-line no-shadow\n                onUserSelect={(selectedUserId) => {\n                  this.setState({ selectedUserId });\n                }}\n              />\n            </div>\n\n            <div className=\"App__content\">\n              <div className=\"App__content-container\">\n                {selectedUserId ? (\n                  <CurrentUser\n                    userId={selectedUserId}\n                    clearUser={this.clearUser}\n                  />\n                ) : 'No user selected'}\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}